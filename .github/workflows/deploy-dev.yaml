name: DEV Build and Deploy

# Controls when the action will run
on:
  push:
    branches-ignore:
      - main

# Workflow of the pipeline
jobs:
  build-and-deploy:
    name: "üì¶ Build"
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.vars.outputs.short_sha}}

    steps:
    - name: üì• Checkout repository
      id: github
      uses: actions/checkout@v3

    - name: ‚öôÔ∏è Set up dotnet
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '9.0.x'

    - name: üê≥ Configure Azure ACR
      uses: azure/docker-login@v2
      with:
        login-server: ${{ vars.ACR_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: üîë SHA of the commit
      id: vars
      run: |
        calculatedSHA=$(git rev-parse --short ${{ github.sha }})
        echo "short_sha=${calculatedSHA}" >> $GITHUB_OUTPUT

    - name: üèóÔ∏è Build and push Docker image to ACR
      env:
        ACR_REGISTRY: ${{ vars.ACR_SERVER }}
        IMAGE_TAG: ${{ steps.vars.outputs.short_sha }}
      run: |
        docker build -f docker/Dockerfile -t $ACR_REGISTRY/f1app:$IMAGE_TAG -t $ACR_REGISTRY/f1app:latest .
        docker push $ACR_REGISTRY/f1app:$IMAGE_TAG
        docker push $ACR_REGISTRY/f1app:latest

  deploy-container-to-ACS:
    name: "üöÄ Deploy"
    runs-on: ubuntu-latest
    needs: build-and-deploy

    steps:
    - name: üîê Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: List Container Apps
      run: az containerapp list -g ces-f1-rg-dev --output table

    - name: üöÄ Deploy to ACR
      uses: azure/container-apps-deploy-action@v1
      env:
        IMAGE_TAG: ${{ needs.build-and-deploy.outputs.short_sha }}
        ACR_SERVER: ${{ vars.ACR_SERVER }}
      with:
        registryUrl: ${{ vars.ACR_SERVER }}
        imageToDeploy: ${{ vars.ACR_SERVER }}/f1app:$IMAGE_TAG
        targetPort: 8080
        ingress: external
        containerAppName: f1app
        containerAppEnvironment: cesf1cae
        resourceGroup: ces-f1-rg-dev
        environmentVariables: |
          ASPNETCORE_ENVIRONMENT=Development ASPNETCORE_URLS=http://+:8080



